#!/bin/bash

. ${SCRIPTS:-/}start-utils
isDebugging && set -x

# Handle Custom Server Pack
if [[ -n "$CUSTOM_SERVER_PACK" ]]; then

  if isURL ${CUSTOM_SERVER_PACK}; then
    zipPackage=/tmp/$(basename ${CUSTOM_SERVER_PACK})
   
    if [[ -f ${zipPackage} ]] && [ -z "$FORCE_REDOWNLOAD" ]; then
      log "Using previously downloaded pack server at ${zipPackage}"
    else
      log "Downloading custom server pack from ${CUSTOM_SERVER_PACK} ..."
      if ! curl -sSL -o ${zipPackage} ${CUSTOM_SERVER_PACK}; then
        log "Failed to download from ${CUSTOM_SERVER}"
        exit 2
      fi
    fi
    serverPack=$zipPackage

  elif [[ -f $CUSTOM_SERVER_PACK ]]; then
    serverPack=$CUSTOM_SERVER_PACK

  else
    log "CUSTOM_SERVER_PACK is not properly set to a URL or existing zip file"
    exit 3
  fi
fi

if [[ -f ${serverPack} ]]; then
  if [[ ! -f ${CUSTOM_SERVER} ]] || [ -n "$FORCE_REDOWNLOAD" ]; then
    log "Extracting Server Pack ${serverPack} to /data"
    unzip -o $serverPack -d /data
  fi
fi

# Handle Custom Server
if isURL ${CUSTOM_SERVER}; then
  filename=$(basename ${CUSTOM_SERVER})
  export SERVER=/data/${filename}

  if [[ -f ${SERVER} ]] || [ -n "$FORCE_REDOWNLOAD" ]; then
    log "Using previously downloaded jar at ${SERVER}"
  else
   log "Downloading custom server jar from ${CUSTOM_SERVER} ..."
   if ! curl -sSL -o ${SERVER} ${CUSTOM_SERVER}; then
      log "Failed to download from ${CUSTOM_SERVER}"
      exit 2
    fi
  fi

elif [[ -f ${CUSTOM_SERVER} ]]; then
  export SERVER=${CUSTOM_SERVER}

elif [[ ${GENERIC_PACK} ]]; then
  log "Using custom server jar from generic pack at ${CUSTOM_SERVER} ..."
  export SERVER=${CUSTOM_SERVER}

else
  log "CUSTOM_SERVER is not properly set to a URL or existing jar file"
  exit 2

fi

export SKIP_LOG4J_CONFIG=true

# Continue to Final Setup
exec ${SCRIPTS:-/}start-finalSetupWorld $@
