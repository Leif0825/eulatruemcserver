name: Validate PR

on:
  pull_request:
    branches: [master]
    types: [assigned, opened, synchronize, labeled]

# Using env variables for step conditions to pass if vars are not found.
env:
  ORG: ${{ secrets.IMAGE_ORG2 }}
  DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
  DOCKER_USER: ${{ secrets.DOCKER_USER2 }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD2 }}
  IMAGE_TO_TEST: ${{ secrets.IMAGE_ORG }}/minecraft-server:test-${{ github.repository_owner }}-${{ github.run_id }}
  GITHUB_WORKFLOW_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

jobs:
  test:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2.4.0

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build
        if: env.ORG
        uses: docker/build-push-action@v2.7.0
        with:
          context: .
          platforms: linux/amd64
          tags: ${{ env.IMAGE_TO_TEST }}
          load: true
          cache-from: type=gha

      - name: Run tests
        if: env.ORG
        run: |
          tests/test.sh

      - name: Gather Docker metadata
        if: contains(github.event.pull_request.labels.*.name, 'ci/push-image') && env.ORG
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ env.ORG }}/minecraft-server

      - name: Login to DockerHub
        if: contains(github.event.pull_request.labels.*.name, 'ci/push-image') && env.DOCKER_USER && env.DOCKER_PASSWORD
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_USER }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Push
        if: contains(github.event.pull_request.labels.*.name, 'ci/push-image') && env.ORG && env.DOCKER_USER && env.DOCKER_PASSWORD
        uses: docker/build-push-action@v2.7.0
        with:
          context: .
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          pull: true
          push: true
          cache-from: type=gha
          labels: ${{ steps.meta.outputs.labels }}

      - name: Discord Success Notification
        if: always() && job.status == 'success' && env.DISCORD_WEBHOOK
        uses: Ilshidur/action-discord@master
        with:
          args: "Github repo: ${{ github.repository }}\n- Branch: ${{ github.ref }}\n- Link: [Github Actions](<${{ env.GITHUB_WORKFLOW_URL }}>)\n- Status: üéâ  ${{ job.status }}  üçè"

      - name: Discord Failure Notification
        if: always() && job.status != 'success' && env.DISCORD_WEBHOOK
        uses: Ilshidur/action-discord@master
        with:
          args: "Github repo: ${{ github.repository }}\n- Branch: ${{ github.ref }}\n- Link: [Github Actions](<${{ env.GITHUB_WORKFLOW_URL }}>)\n- Status: ü§î  ${{ job.status }}  üí£üí•"
